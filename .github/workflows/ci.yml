on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [server, client]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Setup QEMU for Docker
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache deps
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles(format('{0}/package-lock.json', matrix.service)) }}

      - name: Install deps
        run: |
          cd ${{ matrix.service }}
          npm ci

      - name: Login to docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag, build & push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile.prod
          push: true
          tags: |
            sajawal1f12/${{ matrix.service }}-notes-app:latest
            sajawal1f12/${{ matrix.service }}-notes-app:${{ github.sha }}
          cache-from: type=registry,ref=sajawal1f12/${{ matrix.service }}-notes-app:cache
          cache-to: type=registry,ref=sajawal1f12/${{ matrix.service }}-notes-app:cache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GCP VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_VM_SSH_KEY }}
          script: |
            cd ~/website
            docker-compose pull
            docker-compose up -d --remove-orphans
